apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: tokenreviews.authentication.k8s.io
spec:
  conversion:
    strategy: None
  group: authentication.k8s.io
  names:
    kind: TokenReview
    listKind: TokenReviewList
    plural: tokenreviews
    singular: tokenreview
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: 'TokenReview attempts to authenticate a token to a known user.
          Note: TokenReview requests may be cached by the webhook token authenticator
          plugin in the kube-apiserver.'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec holds information about the request being evaluated
            properties:
              audiences:
                description: Audiences is a list of the identifiers that the resource
                  server presented with the token identifies as. Audience-aware token
                  authenticators will verify that the token was intended for at least
                  one of the audiences in this list. If no audiences are provided,
                  the audience will default to the audience of the Kubernetes apiserver.
                items:
                  type: string
                type: array
              token:
                description: Token is the opaque bearer token.
                type: string
            type: object
          status:
            description: Status is filled in by the server and indicates whether the
              request can be authenticated.
            properties:
              audiences:
                description: Audiences are audience identifiers chosen by the authenticator
                  that are compatible with both the TokenReview and token. An identifier
                  is any identifier in the intersection of the TokenReviewSpec audiences
                  and the token's audiences. A client of the TokenReview API that
                  sets the spec.audiences field should validate that a compatible
                  audience identifier is returned in the status.audiences field to
                  ensure that the TokenReview server is audience aware. If a TokenReview
                  returns an empty status.audience field where status.authenticated
                  is "true", the token is valid against the audience of the Kubernetes
                  API server.
                items:
                  type: string
                type: array
              authenticated:
                description: Authenticated indicates that the token was associated
                  with a known user.
                type: boolean
              error:
                description: Error indicates that the token couldn't be checked
                type: string
              user:
                description: User is the UserInfo associated with the provided token.
                properties:
                  extra:
                    additionalProperties:
                      description: ExtraValue masks the value so protobuf can generate
                      items:
                        type: string
                      type: array
                    description: Any additional information provided by the authenticator.
                    type: object
                  groups:
                    description: The names of groups this user is a part of.
                    items:
                      type: string
                    type: array
                  uid:
                    description: A unique value that identifies this user across time.
                      If this user is deleted and another user by the same name is
                      added, they will have different UIDs.
                    type: string
                  username:
                    description: The name that uniquely identifies this user among
                      all active users.
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
